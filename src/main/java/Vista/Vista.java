/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Clases.*;
import Controlador.*;
import java.awt.BorderLayout;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Familia
 */
public class Vista extends javax.swing.JFrame {
    CtPlan ctPlan;
    CtCliente ctCliente;
    CtMascota ctMascota;
    CtPago ctPago;
    LinkedList<Cliente> clienteComboBox;
    LinkedList<Mascota> mascotaComboBox;
    LinkedList<Plan> planComboBox;
    LinkedList<Integer> idPagoComboBox;
    /**
     * Creates new form Vista
     */
    public Vista() {
        initComponents();
        this.ctPlan = new CtPlan();
        this.ctCliente = new CtCliente();
        this.ctMascota = new CtMascota();
        this.ctPago = new CtPago();
        recargarCbClienteMascota();
        recargarCbMascotaPago();
        recargarCbPlanPago();
        recargarCbIdPago();
        enlistarMascotas();
        recargarGraficaMascotas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        codigoPlan = new javax.swing.JTextField();
        precioPlan = new javax.swing.JTextField();
        btnCrearPlan = new javax.swing.JButton();
        btnConsultarPlan = new javax.swing.JButton();
        btnModificarPlan = new javax.swing.JButton();
        btnBorrarPlan = new javax.swing.JButton();
        nombrePlan = new javax.swing.JComboBox<>();
        btnLimpiarPlan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        idCliente = new javax.swing.JTextField();
        nombreCliente = new javax.swing.JTextField();
        apellidoCliente = new javax.swing.JTextField();
        direccionCliente = new javax.swing.JTextField();
        telefonoCliente = new javax.swing.JTextField();
        btnCrearCliente = new javax.swing.JButton();
        btnConsultarCliente = new javax.swing.JButton();
        btnModificarCliente = new javax.swing.JButton();
        btnBorrarCliente = new javax.swing.JButton();
        btnLimpiarCliente = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        codigoMascota = new javax.swing.JTextField();
        nombreMascota = new javax.swing.JTextField();
        anioNacMascota = new javax.swing.JTextField();
        pesoMascota = new javax.swing.JTextField();
        especieMascota = new javax.swing.JComboBox<>();
        cbClienteMascota = new javax.swing.JComboBox<>();
        btnCrearMascota = new javax.swing.JButton();
        btnConsultarMascota = new javax.swing.JButton();
        btnModificarMascota = new javax.swing.JButton();
        btnBorrarMascota = new javax.swing.JButton();
        btnLimpiarMascota = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        fechaPago = new javax.swing.JTextField();
        nCuotasPago = new javax.swing.JTextField();
        cbMascotaPago = new javax.swing.JComboBox<>();
        cbPlanPago = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        cbIdPago = new javax.swing.JComboBox<>();
        btnCrearPago = new javax.swing.JButton();
        btnConsultarPago = new javax.swing.JButton();
        btnModificarPago = new javax.swing.JButton();
        btnBorrarPago = new javax.swing.JButton();
        btnLimpiarPago = new javax.swing.JButton();
        panelMascotasPorEspecie = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnExportarReporteMascotas = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMascotas = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel1.setText("Codigo:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(27, 26, 50, 16);

        jLabel2.setText("Nombre:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(27, 66, 50, 16);

        jLabel3.setText("Precio:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(27, 106, 50, 16);
        jPanel1.add(codigoPlan);
        codigoPlan.setBounds(92, 23, 150, 22);
        jPanel1.add(precioPlan);
        precioPlan.setBounds(92, 103, 150, 22);

        btnCrearPlan.setText("Crear");
        btnCrearPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrearPlan);
        btnCrearPlan.setBounds(13, 253, 90, 22);

        btnConsultarPlan.setText("Consultar");
        btnConsultarPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnConsultarPlan);
        btnConsultarPlan.setBounds(110, 253, 90, 22);

        btnModificarPlan.setText("Modificar");
        btnModificarPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificarPlan);
        btnModificarPlan.setBounds(207, 253, 90, 22);

        btnBorrarPlan.setText("Borrar");
        btnBorrarPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnBorrarPlan);
        btnBorrarPlan.setBounds(304, 253, 90, 22);

        nombrePlan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bienestar", "Élite", "Diamante" }));
        jPanel1.add(nombrePlan);
        nombrePlan.setBounds(92, 63, 150, 22);

        btnLimpiarPlan.setText("Limpiar");
        btnLimpiarPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiarPlan);
        btnLimpiarPlan.setBounds(401, 253, 90, 22);

        jTabbedPane1.addTab("Plan", jPanel1);

        jPanel2.setLayout(null);

        jLabel4.setText("Identificacion:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(30, 9, 80, 16);

        jLabel5.setText("Nombres:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(30, 49, 80, 16);

        jLabel6.setText("Apellidos:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(30, 89, 80, 16);

        jLabel7.setText("Dirección:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(30, 129, 80, 16);

        jLabel8.setText("Telefono:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(30, 169, 80, 16);
        jPanel2.add(idCliente);
        idCliente.setBounds(140, 6, 260, 22);
        jPanel2.add(nombreCliente);
        nombreCliente.setBounds(140, 46, 260, 22);
        jPanel2.add(apellidoCliente);
        apellidoCliente.setBounds(140, 86, 260, 22);
        jPanel2.add(direccionCliente);
        direccionCliente.setBounds(140, 126, 260, 22);
        jPanel2.add(telefonoCliente);
        telefonoCliente.setBounds(140, 166, 260, 22);

        btnCrearCliente.setText("Crear");
        btnCrearCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnCrearCliente);
        btnCrearCliente.setBounds(13, 253, 90, 22);

        btnConsultarCliente.setText("Consultar");
        btnConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnConsultarCliente);
        btnConsultarCliente.setBounds(110, 253, 90, 22);

        btnModificarCliente.setText("Modificar");
        btnModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnModificarCliente);
        btnModificarCliente.setBounds(207, 253, 90, 22);

        btnBorrarCliente.setText("Borrar");
        btnBorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnBorrarCliente);
        btnBorrarCliente.setBounds(304, 253, 90, 22);

        btnLimpiarCliente.setText("Limpiar");
        btnLimpiarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnLimpiarCliente);
        btnLimpiarCliente.setBounds(401, 253, 90, 22);

        jTabbedPane1.addTab("Cliente", jPanel2);

        jPanel3.setLayout(null);

        jLabel9.setText("Codigo:");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(30, 9, 110, 16);

        jLabel10.setText("Nombre:");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(30, 49, 110, 16);

        jLabel11.setText("Año de nacimiento:");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(30, 89, 110, 16);

        jLabel12.setText("Peso (Kg):");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(30, 129, 110, 16);

        jLabel13.setText("Especie:");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(30, 169, 110, 16);

        jLabel14.setText("Cliente:");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(30, 209, 110, 16);
        jPanel3.add(codigoMascota);
        codigoMascota.setBounds(140, 6, 280, 22);
        jPanel3.add(nombreMascota);
        nombreMascota.setBounds(140, 46, 280, 22);
        jPanel3.add(anioNacMascota);
        anioNacMascota.setBounds(140, 86, 280, 22);
        jPanel3.add(pesoMascota);
        pesoMascota.setBounds(140, 126, 280, 22);

        especieMascota.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Canino", "Minino", "Reptil", "Ave", "Pez" }));
        jPanel3.add(especieMascota);
        especieMascota.setBounds(140, 166, 100, 22);

        cbClienteMascota.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(cbClienteMascota);
        cbClienteMascota.setBounds(140, 206, 280, 22);

        btnCrearMascota.setText("Crear");
        btnCrearMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnCrearMascota);
        btnCrearMascota.setBounds(13, 253, 90, 22);

        btnConsultarMascota.setText("Consultar");
        btnConsultarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnConsultarMascota);
        btnConsultarMascota.setBounds(110, 253, 90, 22);

        btnModificarMascota.setText("Modificar");
        btnModificarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnModificarMascota);
        btnModificarMascota.setBounds(207, 253, 90, 22);

        btnBorrarMascota.setText("Borrar");
        btnBorrarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnBorrarMascota);
        btnBorrarMascota.setBounds(304, 253, 90, 22);

        btnLimpiarMascota.setText("Limpiar");
        btnLimpiarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnLimpiarMascota);
        btnLimpiarMascota.setBounds(401, 253, 90, 22);

        jTabbedPane1.addTab("Mascota", jPanel3);

        jPanel4.setLayout(null);

        jLabel15.setText("Id pago:");
        jPanel4.add(jLabel15);
        jLabel15.setBounds(30, 9, 110, 16);

        jLabel16.setText("Fecha del pago:");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(30, 49, 110, 16);

        jLabel17.setText("Numero de cuotas:");
        jPanel4.add(jLabel17);
        jLabel17.setBounds(30, 89, 110, 16);

        jLabel18.setText("Mascota:");
        jPanel4.add(jLabel18);
        jLabel18.setBounds(30, 129, 110, 16);

        jLabel19.setText("Plan:");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(30, 169, 110, 16);

        fechaPago.setText("DD/MM/YYYY");
        jPanel4.add(fechaPago);
        fechaPago.setBounds(140, 46, 280, 22);
        jPanel4.add(nCuotasPago);
        nCuotasPago.setBounds(140, 86, 280, 22);

        cbMascotaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel4.add(cbMascotaPago);
        cbMascotaPago.setBounds(140, 126, 280, 22);

        cbPlanPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel4.add(cbPlanPago);
        cbPlanPago.setBounds(140, 166, 280, 22);

        jLabel20.setText("Diligencie este campo solo para consulta o editar");
        jPanel4.add(jLabel20);
        jLabel20.setBounds(210, 9, 280, 16);

        cbIdPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel4.add(cbIdPago);
        cbIdPago.setBounds(140, 6, 60, 22);

        btnCrearPago.setText("Crear");
        btnCrearPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearPagoActionPerformed(evt);
            }
        });
        jPanel4.add(btnCrearPago);
        btnCrearPago.setBounds(13, 253, 90, 22);

        btnConsultarPago.setText("Consultar");
        btnConsultarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarPagoActionPerformed(evt);
            }
        });
        jPanel4.add(btnConsultarPago);
        btnConsultarPago.setBounds(110, 253, 90, 22);

        btnModificarPago.setText("Modificar");
        btnModificarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPagoActionPerformed(evt);
            }
        });
        jPanel4.add(btnModificarPago);
        btnModificarPago.setBounds(207, 253, 90, 22);

        btnBorrarPago.setText("Borrar");
        btnBorrarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarPagoActionPerformed(evt);
            }
        });
        jPanel4.add(btnBorrarPago);
        btnBorrarPago.setBounds(304, 253, 90, 22);

        btnLimpiarPago.setText("Limpiar");
        btnLimpiarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarPagoActionPerformed(evt);
            }
        });
        jPanel4.add(btnLimpiarPago);
        btnLimpiarPago.setBounds(401, 253, 90, 22);

        jTabbedPane1.addTab("Pago", jPanel4);

        javax.swing.GroupLayout panelMascotasPorEspecieLayout = new javax.swing.GroupLayout(panelMascotasPorEspecie);
        panelMascotasPorEspecie.setLayout(panelMascotasPorEspecieLayout);
        panelMascotasPorEspecieLayout.setHorizontalGroup(
            panelMascotasPorEspecieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
        );
        panelMascotasPorEspecieLayout.setVerticalGroup(
            panelMascotasPorEspecieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 305, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Mascotas por especie", panelMascotasPorEspecie);

        jPanel7.setLayout(null);

        btnExportarReporteMascotas.setText("Exportar");
        btnExportarReporteMascotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarReporteMascotasActionPerformed(evt);
            }
        });
        jPanel7.add(btnExportarReporteMascotas);
        btnExportarReporteMascotas.setBounds(216, 253, 73, 22);

        tablaMascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Año de nacimiento", "Peso", "Especie", "nombres dueño", "apellidos dueño"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaMascotas);

        jPanel7.add(jScrollPane2);
        jScrollPane2.setBounds(10, 10, 480, 220);

        jTabbedPane1.addTab("Reporte mascotas", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        setBounds(0, 0, 520, 358);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearPlanActionPerformed
        // TODO add your handling code here:
        String codigo = codigoPlan.getText();
        String nombre = nombrePlan.getSelectedItem().toString();
        int precio = Integer.parseInt(precioPlan.getText());
        Plan p = new Plan(codigo,nombre,precio);
        
        if (this.ctPlan.crearPlan(p)) {
            JOptionPane.showMessageDialog(this, "El plan fue agregado en la base de datos");
            recargarCbPlanPago();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el registro a la base de datos");
        }
    }//GEN-LAST:event_btnCrearPlanActionPerformed

    private void btnCrearClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearClienteActionPerformed
        // TODO add your handling code here:
        String id = idCliente.getText();
        String nombre = nombreCliente.getText();
        String apellido = apellidoCliente.getText();
        String direccion = direccionCliente.getText();
        String telefono = telefonoCliente.getText();
        Cliente c = new Cliente(id,nombre,apellido,direccion,telefono);
        
        if (this.ctCliente.crearCliente(c)) {
            JOptionPane.showMessageDialog(this, "El cliente fue agregado en la base de datos");
            recargarCbClienteMascota();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el registro a la base de datos");
        }
        recargarCbClienteMascota();
    }//GEN-LAST:event_btnCrearClienteActionPerformed

    private void btnConsultarPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarPlanActionPerformed
        // TODO add your handling code here:
        String codigo = codigoPlan.getText();
        Plan p = ctPlan.buscarPlan(codigo);
        if (p == null) {
            JOptionPane.showMessageDialog(this, "No se ha podido encontrar el plan");
            limpiarPlan();
        } else {
            nombrePlan.setSelectedItem(p.getNombre());
            precioPlan.setText(String.valueOf(p.getPrecio()));
        }
    }//GEN-LAST:event_btnConsultarPlanActionPerformed

    private void btnLimpiarPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarPlanActionPerformed
        // TODO add your handling code here:
        limpiarPlan();
    }//GEN-LAST:event_btnLimpiarPlanActionPerformed

    private void btnModificarPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPlanActionPerformed
        // TODO add your handling code here:
        String codigo = codigoPlan.getText();
        String nombre = nombrePlan.getSelectedItem().toString();
        int precio = Integer.parseInt(precioPlan.getText());
        Plan p = new Plan(codigo, nombre, precio);
        if (this.ctPlan.actualizarPlan(p)) {
            JOptionPane.showMessageDialog(this, "El plan se ha actualizado con exito");
            recargarCbPlanPago();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido actualizar el plan");
        }
    }//GEN-LAST:event_btnModificarPlanActionPerformed

    private void btnBorrarPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarPlanActionPerformed
        // TODO add your handling code here:
        String codigo = codigoPlan.getText();
        if (this.ctPlan.borrarPlan(codigo)) {
            JOptionPane.showMessageDialog(this, "El plan se ha borrado con exito");
            recargarCbPlanPago();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido borrar el plan");
        }
        limpiarPlan();
    }//GEN-LAST:event_btnBorrarPlanActionPerformed

    private void btnConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarClienteActionPerformed
        // TODO add your handling code here:
        String identificacion = idCliente.getText();
        Cliente c = this.ctCliente.buscarCliente(identificacion);
        if (c == null) {
            JOptionPane.showMessageDialog(this, "No se ha podido encontrar el cliente");
            limpiarCliente();
        } else {
            idCliente.setText(c.getIdentificacion());
            nombreCliente.setText(c.getNombres());
            apellidoCliente.setText(c.getApellidos());
            direccionCliente.setText(c.getDireccion());
            telefonoCliente.setText(c.getTelefono());
        }
    }//GEN-LAST:event_btnConsultarClienteActionPerformed

    private void btnLimpiarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarClienteActionPerformed
        // TODO add your handling code here:
        limpiarCliente();
    }//GEN-LAST:event_btnLimpiarClienteActionPerformed

    private void btnModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarClienteActionPerformed
        // TODO add your handling code here:
        String id = idCliente.getText();
        String nombre = nombreCliente.getText();
        String apellido = apellidoCliente.getText();
        String direccion = direccionCliente.getText();
        String telefono = telefonoCliente.getText();
        Cliente c = new Cliente(id, nombre, apellido, direccion, telefono);
        if (this.ctCliente.actualizarCliente(c)) {
            JOptionPane.showMessageDialog(this, "El cliente se ha actualizado con exito");
            recargarCbClienteMascota();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido actualizar el cliente");
        }
        recargarCbClienteMascota();
    }//GEN-LAST:event_btnModificarClienteActionPerformed

    private void btnBorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarClienteActionPerformed
        // TODO add your handling code here:
        String id = idCliente.getText();
        if (this.ctCliente.borrarCliente(id)) {
            JOptionPane.showMessageDialog(this, "El cliente se ha borrado con exito");
            recargarCbClienteMascota();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido borrar el cliente");
        }
        recargarCbClienteMascota();
        limpiarCliente();
    }//GEN-LAST:event_btnBorrarClienteActionPerformed

    private void btnCrearMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearMascotaActionPerformed
        // TODO add your handling code here:
        String codigo = codigoMascota.getText();
        String nombre = nombreMascota.getText();
        int anioNac = Integer.parseInt(anioNacMascota.getText());
        float peso = Float.parseFloat(pesoMascota.getText());
        String especie = especieMascota.getSelectedItem().toString();
        
        String cl = cbClienteMascota.getSelectedItem().toString();
        int primerEspacio = cl.indexOf(" ");
        int idCl = Integer.parseInt(cl.substring(0, primerEspacio));
        
        Mascota m = new Mascota(codigo, nombre, anioNac, peso, especie, idCl);
        
        if (this.ctMascota.crearMascota(m)) {
            JOptionPane.showMessageDialog(this, "La mascota fue agregada en la base de datos");
            recargarCbMascotaPago();
            enlistarMascotas();
            recargarGraficaMascotas();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el registro a la base de datos");
        }
    }//GEN-LAST:event_btnCrearMascotaActionPerformed

    private void btnConsultarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarMascotaActionPerformed
        // TODO add your handling code here:
        String codigo = codigoMascota.getText();
        Mascota m = ctMascota.buscarMascota(codigo);
        if (m == null) {
            JOptionPane.showMessageDialog(this, "No se ha podido encontrar la mascota");
            limpiarMascota();
        } else {
            codigoMascota.setText(m.getCodigo());
            nombreMascota.setText(m.getNombre());
            anioNacMascota.setText(String.valueOf(m.getAnioNac()));
            pesoMascota.setText(String.valueOf(m.getPeso()));
            especieMascota.setSelectedItem(m.getEspecie());
            
            int index = 0;
            
            for (Cliente cl : clienteComboBox) {
                if (cl.getIdPk() == m.getIdCl()) {
                    cbClienteMascota.setSelectedIndex(index);
                }
                index ++;
            }
        }
    }//GEN-LAST:event_btnConsultarMascotaActionPerformed

    private void btnLimpiarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarMascotaActionPerformed
        // TODO add your handling code here:
        limpiarMascota();
    }//GEN-LAST:event_btnLimpiarMascotaActionPerformed

    private void btnModificarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarMascotaActionPerformed
        // TODO add your handling code here:
        String codigo = codigoMascota.getText();
        String nombre = nombreMascota.getText();
        int anioNac = Integer.parseInt(anioNacMascota.getText());
        float peso = Float.parseFloat(pesoMascota.getText());
        String especie = especieMascota.getSelectedItem().toString();
        
        String cl = cbClienteMascota.getSelectedItem().toString();
        int primerEspacio = cl.indexOf(" ");
        int idCl = Integer.parseInt(cl.substring(0, primerEspacio));
        
        Mascota m = new Mascota(codigo, nombre, anioNac, peso, especie, idCl);
        
        if (ctMascota.actualizarMascota(m)) {
            JOptionPane.showMessageDialog(this, "La mascota se ha actualizado con exito");
            recargarCbMascotaPago();
            enlistarMascotas();
            recargarGraficaMascotas();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido actualizar la mascota");
            limpiarMascota();
        }
    }//GEN-LAST:event_btnModificarMascotaActionPerformed

    private void btnBorrarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarMascotaActionPerformed
        // TODO add your handling code here:
        String codigo = codigoMascota.getText();
        if (ctMascota.borrarMascota(codigo)) {
            JOptionPane.showMessageDialog(this, "La mascota se ha borrado con exito");
            recargarCbMascotaPago();
            enlistarMascotas();
            recargarGraficaMascotas();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido borrar la mascota");
            limpiarMascota();
        }
    }//GEN-LAST:event_btnBorrarMascotaActionPerformed

    private void btnCrearPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearPagoActionPerformed
        // TODO add your handling code here:
        String fecha = fechaPago.getText();
        int nCuotas = Integer.parseInt(nCuotasPago.getText());
        
        String m = cbMascotaPago.getSelectedItem().toString();
        int primerEspacioM = m.indexOf(" ");
        int idMtc = Integer.parseInt(m.substring(0, primerEspacioM));
        
        String pl = cbPlanPago.getSelectedItem().toString();
        int primerEspacioPl = pl.indexOf(" ");
        int idPl = Integer.parseInt(pl.substring(0, primerEspacioPl));
        
        Pago pg = new Pago(fecha, nCuotas, idMtc, idPl);
        
        if (this.ctPago.crearPago(pg)) {
            JOptionPane.showMessageDialog(this, "El pago fue agregado en la base de datos");
            recargarCbIdPago();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el registro a la base de datos");        }
    }//GEN-LAST:event_btnCrearPagoActionPerformed

    private void btnConsultarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarPagoActionPerformed
        // TODO add your handling code here:
        String idPg = cbIdPago.getSelectedItem().toString();
        Pago pg = this.ctPago.buscarPago(idPg);
        if (pg == null) {
            JOptionPane.showMessageDialog(this, "No se ha podido encontrar el pago");
            limpiarPago();
        } else {
            fechaPago.setText(pg.getFechaPago());
            nCuotasPago.setText(String.valueOf(pg.getnCuotas()));
            
            int index = 0;
            
            for (Mascota m : mascotaComboBox) {
                if (m.getIdPk() == pg.getIdMtc()) {
                    cbMascotaPago.setSelectedIndex(index);
                }
                index++;
            }
            
            index = 0;
            
            for (Plan p : planComboBox) {
                if (p.getIdPk() == pg.getIdPl()) {
                    cbPlanPago.setSelectedIndex(index);
                }
                index++;
            }
        }
    }//GEN-LAST:event_btnConsultarPagoActionPerformed

    private void btnLimpiarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarPagoActionPerformed
        // TODO add your handling code here:
        limpiarPago();
    }//GEN-LAST:event_btnLimpiarPagoActionPerformed

    private void btnModificarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPagoActionPerformed
        // TODO add your handling code here:
        int idPk = Integer.parseInt(cbIdPago.getSelectedItem().toString());
        String fecha = fechaPago.getText();
        int nCuotas = Integer.parseInt(nCuotasPago.getText());
        
        String m = cbMascotaPago.getSelectedItem().toString();
        int primerEspacio = m.indexOf(" ");
        int idMtc = Integer.parseInt(m.substring(0, primerEspacio));
        
        String p = cbPlanPago.getSelectedItem().toString();
        primerEspacio = p.indexOf(" ");
        int idPl = Integer.parseInt(p.substring(0, primerEspacio));
        
        Pago pg = new Pago(fecha, nCuotas, idMtc, idPl);
        pg.setIdPk(idPk);
        
        if (this.ctPago.actualizarPago(pg)) {
            JOptionPane.showMessageDialog(this, "El pago se ha actualizado con exito");
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido actualizar el pago");
        }
    }//GEN-LAST:event_btnModificarPagoActionPerformed

    private void btnBorrarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarPagoActionPerformed
        // TODO add your handling code here:
        String idPg = cbIdPago.getSelectedItem().toString();
        if (this.ctPago.borrarPago(idPg)) {
            JOptionPane.showMessageDialog(this, "el pago se ha borrado con exito");
            recargarCbIdPago();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido borrar el pago");
            limpiarMascota();
        }
    }//GEN-LAST:event_btnBorrarPagoActionPerformed

    private void btnExportarReporteMascotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarReporteMascotasActionPerformed
        // TODO add your handling code here:
        HSSFWorkbook book = new HSSFWorkbook();
        HSSFSheet sheet = book.createSheet();
        book.setSheetName(0, "Mascotas");
        String[] encabezados = new String[]{
            "Codigo",
            "Nombre",
            "Año nacimiento",
            "Peso",
            "especie",
            "Nombres dueño",
            "Apellidos dueño"
        };
        CellStyle estiloEncabezado = book.createCellStyle();
        HSSFFont font = book.createFont();
        font.setBold(true);
        estiloEncabezado.setFont(font);
        
        HSSFRow encabezadosFila = sheet.createRow(0);
        for (int i = 0;i < encabezados.length; i++) {
            String encabezado = encabezados[i];
            HSSFCell cell = encabezadosFila.createCell(i);
            cell.setCellStyle(estiloEncabezado);
            cell.setCellValue(encabezado);
        }
        
        for (int i = 0; i < mascotaComboBox.size(); i++) {
            HSSFRow fila = sheet.createRow(i + 1);
            
            String codigo = mascotaComboBox.get(i).getCodigo();
            String nombre = mascotaComboBox.get(i).getNombre();
            int anioNac = mascotaComboBox.get(i).getAnioNac();
            float peso = mascotaComboBox.get(i).getPeso();
            String especie = mascotaComboBox.get(i).getEspecie();
            String nomDueno = "";
            String apellDueno = "";
            
            for (int j = 0; j < clienteComboBox.size(); j++) {
                if (mascotaComboBox.get(i).getIdCl() == clienteComboBox.get(j).getIdPk()) {
                    nomDueno = clienteComboBox.get(j).getNombres();
                    apellDueno = clienteComboBox.get(j).getApellidos();
                }
            }
            
            fila.createCell(0).setCellValue(codigo);
            fila.createCell(1).setCellValue(nombre);
            fila.createCell(2).setCellValue(anioNac);
            fila.createCell(3).setCellValue(peso);
            fila.createCell(4).setCellValue(especie);
            fila.createCell(5).setCellValue(nomDueno);
            fila.createCell(6).setCellValue(apellDueno);
        }
        try {
            FileOutputStream archivo = new FileOutputStream("Lista Mascotas.xls");
            book.write(archivo);
            archivo.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExportarReporteMascotasActionPerformed

    public void recargarGraficaMascotas() {
        LinkedList<MascotasPorEspecie> listaEspecie = ctMascota.buscarMascotasPorEspecie();
        DefaultPieDataset dataSet = new DefaultPieDataset();
        
        for (MascotasPorEspecie especie : listaEspecie) {
            dataSet.setValue(especie.getEspecie(), especie.getCantidadEspecie());
        }
        
        JFreeChart chart = ChartFactory.createPieChart("Mascotas por especie", dataSet, true, true, true);
        ChartPanel panel = new ChartPanel(chart);
        panel.setMouseWheelEnabled(true);
        
        panelMascotasPorEspecie.setLayout(new java.awt.BorderLayout());
        panelMascotasPorEspecie.add(panel, BorderLayout.CENTER);
        panelMascotasPorEspecie.validate();
    }
    
    public void enlistarMascotas() {
        tablaMascotas.removeAll();
        DefaultTableModel modelo = new DefaultTableModel();
        
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año de nacimiento");
        modelo.addColumn("Peso");
        modelo.addColumn("Especie");
        modelo.addColumn("Nombres dueño");
        modelo.addColumn("Apellidos dueño");
        tablaMascotas.setModel(modelo);
        
        for (Mascota m : mascotaComboBox) {
            
            String[] info = new String[7];
            info[0] = m.getCodigo();
            info[1] = m.getNombre();
            info[2] = String.valueOf(m.getAnioNac());
            info[3] = String.valueOf(m.getPeso());
            info[4] = m.getEspecie();
            
            for (Cliente c : clienteComboBox) {
                if (m.getIdCl() == c.getIdPk()) {
                    info[5] = c.getNombres();
                    info[6] = c.getApellidos();
                }
            }
            
            modelo.addRow(info);
        }
    }
    
    public void limpiarPlan() {
        codigoPlan.setText("");
        nombrePlan.setSelectedIndex(0);
        precioPlan.setText("");
    }
    
    public void limpiarCliente() {
        idCliente.setText("");
        nombreCliente.setText("");
        apellidoCliente.setText("");
        direccionCliente.setText("");
        telefonoCliente.setText("");
    }
    
    public void limpiarMascota() {
        codigoMascota.setText("");
        nombreMascota.setText("");
        anioNacMascota.setText("");
        pesoMascota.setText("");
        especieMascota.setSelectedIndex(0);
        cbClienteMascota.setSelectedIndex(0);
    }
    
    public void limpiarPago() {
        cbIdPago.setSelectedIndex(0);
        fechaPago.setText("DD/MM/YYYY");
        nCuotasPago.setText("");
        cbMascotaPago.setSelectedIndex(0);
        cbPlanPago.setSelectedIndex(0);
    }
    
    public void recargarCbClienteMascota() {
        cbClienteMascota.removeAllItems();
        this.clienteComboBox = ctCliente.buscarTodosLosClientes();
        int cont = 0;
        
        while (cont < clienteComboBox.size()) {
            String cl;
            cl = clienteComboBox.get(cont).getIdPk() +" "+ clienteComboBox.get(cont).getIdentificacion()+" "+ clienteComboBox.get(cont).getNombres() +" "+ clienteComboBox.get(cont).getApellidos();
            cbClienteMascota.addItem(cl);
            
            cont = cont + 1;
        }
    }
    
    public void recargarCbMascotaPago() {
        cbMascotaPago.removeAllItems();
        this.mascotaComboBox = ctMascota.buscarTodasMascotas();
        int cont = 0;
        
        while (cont < mascotaComboBox.size()) {
            String m;
            m = mascotaComboBox.get(cont).getIdPk() +" "+ mascotaComboBox.get(cont).getCodigo() +" "+ mascotaComboBox.get(cont).getNombre() +" "+ mascotaComboBox.get(cont).getAnioNac();
            cbMascotaPago.addItem(m);
            
            cont++;
        }
    }
    
    public void recargarCbPlanPago() {
        cbPlanPago.removeAllItems();
        this.planComboBox = ctPlan.buscarTodosPlanes();
        int cont = 0;
        
        while (cont < planComboBox.size()) {
            String p;
            p = planComboBox.get(cont).getIdPk() +" "+ planComboBox.get(cont).getNombre() +" "+ planComboBox.get(cont).getPrecio();
            cbPlanPago.addItem(p);
            
            cont++;
        }
    }
    
    public void recargarCbIdPago() {
        cbIdPago.removeAllItems();
        this.idPagoComboBox = ctPago.buscarTodosIdPago();
        int cont = 0;
        
        while (cont < idPagoComboBox.size()) {
            String idPago = String.valueOf(idPagoComboBox.get(cont));
            cbIdPago.addItem(idPago);
            cont++;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField anioNacMascota;
    private javax.swing.JTextField apellidoCliente;
    private javax.swing.JButton btnBorrarCliente;
    private javax.swing.JButton btnBorrarMascota;
    private javax.swing.JButton btnBorrarPago;
    private javax.swing.JButton btnBorrarPlan;
    private javax.swing.JButton btnConsultarCliente;
    private javax.swing.JButton btnConsultarMascota;
    private javax.swing.JButton btnConsultarPago;
    private javax.swing.JButton btnConsultarPlan;
    private javax.swing.JButton btnCrearCliente;
    private javax.swing.JButton btnCrearMascota;
    private javax.swing.JButton btnCrearPago;
    private javax.swing.JButton btnCrearPlan;
    private javax.swing.JButton btnExportarReporteMascotas;
    private javax.swing.JButton btnLimpiarCliente;
    private javax.swing.JButton btnLimpiarMascota;
    private javax.swing.JButton btnLimpiarPago;
    private javax.swing.JButton btnLimpiarPlan;
    private javax.swing.JButton btnModificarCliente;
    private javax.swing.JButton btnModificarMascota;
    private javax.swing.JButton btnModificarPago;
    private javax.swing.JButton btnModificarPlan;
    private javax.swing.JComboBox<String> cbClienteMascota;
    private javax.swing.JComboBox<String> cbIdPago;
    private javax.swing.JComboBox<String> cbMascotaPago;
    private javax.swing.JComboBox<String> cbPlanPago;
    private javax.swing.JTextField codigoMascota;
    private javax.swing.JTextField codigoPlan;
    private javax.swing.JTextField direccionCliente;
    private javax.swing.JComboBox<String> especieMascota;
    private javax.swing.JTextField fechaPago;
    private javax.swing.JTextField idCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nCuotasPago;
    private javax.swing.JTextField nombreCliente;
    private javax.swing.JTextField nombreMascota;
    private javax.swing.JComboBox<String> nombrePlan;
    private javax.swing.JPanel panelMascotasPorEspecie;
    private javax.swing.JTextField pesoMascota;
    private javax.swing.JTextField precioPlan;
    private javax.swing.JTable tablaMascotas;
    private javax.swing.JTextField telefonoCliente;
    // End of variables declaration//GEN-END:variables
}
